sigdt.dest[[i]] <- abs(as.numeric(unlist(ccf2[i,]$ccfvalue.dest))) - sig
sigdt.bird[[i]] <- abs(as.numeric(unlist(ccf2[i,]$ccfvalue.bird))) - sig
}
## filter out the significantly correlated
## https://support.minitab.com/en-us/minitab/21/help-and-how-to/statistical-modeling/time-series/supporting-topics/basics/guidelines-for-testing-the-autocorrelation-or-cross-correlation/
## time series (origin location - destination location - month lag - bird order)
sigdt <- as.data.frame(cbind(sigdt.ori,sigdt.dest,sigdt.bird))
ccf3 <- cbind(ccf2,sigdt)
filtered <- list()
for (i in 1:nrow(ccf3)){
metadata <- ccf3 %>%
select(birdorder,ori,dest)
metadata$birdorder <- unlist(metadata$birdorder)
filtered[[i]] <- as.list(metadata[i,],ccf.ori,ccf.dest,ccf.bird)
ccf.ori <- unlist(ccf3[i,'ccfvalue.ori'])[which(as.logical(unlist(ccf3[i,'sigdt.ori'])>0))]
names(ccf.ori) <- lagN[which(as.logical(unlist(ccf3[i,'sigdt.ori'])>0))]
filtered[[i]]$ccf.ori <- ccf.ori
ccf.dest <- unlist(ccf3[i,'ccfvalue.dest'])[which(as.logical(unlist(ccf3[i,'sigdt.dest'])>0))]
names(ccf.dest) <- lagN[which(as.logical(unlist(ccf3[i,'sigdt.dest'])>0))]
filtered[[i]]$ccf.dest <- ccf.dest
ccf.bird <- unlist(ccf3[i,'ccfvalue.bird'])[which(as.logical(unlist(ccf3[i,'sigdt.bird'])>0))]
names(ccf.bird) <- lagN[which(as.logical(unlist(ccf3[i,'sigdt.bird'])>0))]
filtered[[i]]$ccf.bird <- ccf.bird
}
View(filtered)
i=1
View(ccf3)
filtered[[i]] <- as.list(metadata[i,],ccf.ori,ccf.dest,ccf.bird)
ccf3[i,'sigdt.ori']
sig <- 2*sqrt(obN)/sqrt(obN-abs(lagN))
abs(as.numeric(unlist(ccf2[i,]$ccfvalue.ori)))
abs(as.numeric(unlist(ccf2[i,]$ccfvalue.dest)))
abs(as.numeric(unlist(ccf2[i,]$ccfvalue.bird)))
for (i in 1:nrow(ccf2)){
# sigdt.ori[[i]] <- abs(as.numeric(unlist(ccf2[i,]$ccfvalue.ori))) - sig
# sigdt.dest[[i]] <- abs(as.numeric(unlist(ccf2[i,]$ccfvalue.dest))) - sig
# sigdt.bird[[i]] <- abs(as.numeric(unlist(ccf2[i,]$ccfvalue.bird))) - sig
sigdt.ori[[i]] <- abs(as.numeric(unlist(ccf2[i,]$ccfvalue.ori))) - upperCI
sigdt.dest[[i]] <- abs(as.numeric(unlist(ccf2[i,]$ccfvalue.dest))) - upperCI
sigdt.bird[[i]] <- abs(as.numeric(unlist(ccf2[i,]$ccfvalue.bird))) - upperCI
}
## filter out the significantly correlated
## https://support.minitab.com/en-us/minitab/21/help-and-how-to/statistical-modeling/time-series/supporting-topics/basics/guidelines-for-testing-the-autocorrelation-or-cross-correlation/
## time series (origin location - destination location - month lag - bird order)
sigdt <- as.data.frame(cbind(sigdt.ori,sigdt.dest,sigdt.bird))
ccf3 <- cbind(ccf2,sigdt)
filtered <- list()
for (i in 1:nrow(ccf3)){
metadata <- ccf3 %>%
select(birdorder,ori,dest)
metadata$birdorder <- unlist(metadata$birdorder)
filtered[[i]] <- as.list(metadata[i,],ccf.ori,ccf.dest,ccf.bird)
ccf.ori <- unlist(ccf3[i,'ccfvalue.ori'])[which(as.logical(unlist(ccf3[i,'sigdt.ori'])>0))]
names(ccf.ori) <- lagN[which(as.logical(unlist(ccf3[i,'sigdt.ori'])>0))]
filtered[[i]]$ccf.ori <- ccf.ori
ccf.dest <- unlist(ccf3[i,'ccfvalue.dest'])[which(as.logical(unlist(ccf3[i,'sigdt.dest'])>0))]
names(ccf.dest) <- lagN[which(as.logical(unlist(ccf3[i,'sigdt.dest'])>0))]
filtered[[i]]$ccf.dest <- ccf.dest
ccf.bird <- unlist(ccf3[i,'ccfvalue.bird'])[which(as.logical(unlist(ccf3[i,'sigdt.bird'])>0))]
names(ccf.bird) <- lagN[which(as.logical(unlist(ccf3[i,'sigdt.bird'])>0))]
filtered[[i]]$ccf.bird <- ccf.bird
}
filtered[[i]]$ori.p <- unlist(ccf3[i,'ccfP.ori'])[which(as.logical(unlist(ccf3[i,'sigdt.ori'])>0))]
filtered[[i]]$dest.p <- unlist(ccf3[i,'ccfP.dest'])[which(as.logical(unlist(ccf3[i,'sigdt.dest'])>0))]
filtered[[i]]$bird.p <- unlist(ccf3[i,'ccfP.bird'])[which(as.logical(unlist(ccf3[i,'sigdt.bird'])>0))]
filtered <- list()
for (i in 1:nrow(ccf3)){
metadata <- ccf3 %>%
select(birdorder,ori,dest)
metadata$birdorder <- unlist(metadata$birdorder)
filtered[[i]] <- as.list(metadata[i,],ccf.ori,ori.p,ccf.dest,dest.p,ccf.bird,
bird.p)
ccf.ori <- unlist(ccf3[i,'ccfvalue.ori'])[which(as.logical(unlist(ccf3[i,'sigdt.ori'])>0))]
names(ccf.ori) <- lagN[which(as.logical(unlist(ccf3[i,'sigdt.ori'])>0))]
filtered[[i]]$ccf.ori <- ccf.ori
filtered[[i]]$ori.p <- unlist(ccf3[i,'ccfP.ori'])[which(as.logical(unlist(ccf3[i,'sigdt.ori'])>0))]
ccf.dest <- unlist(ccf3[i,'ccfvalue.dest'])[which(as.logical(unlist(ccf3[i,'sigdt.dest'])>0))]
names(ccf.dest) <- lagN[which(as.logical(unlist(ccf3[i,'sigdt.dest'])>0))]
filtered[[i]]$ccf.dest <- ccf.dest
filtered[[i]]$dest.p <- unlist(ccf3[i,'ccfP.dest'])[which(as.logical(unlist(ccf3[i,'sigdt.dest'])>0))]
ccf.bird <- unlist(ccf3[i,'ccfvalue.bird'])[which(as.logical(unlist(ccf3[i,'sigdt.bird'])>0))]
names(ccf.bird) <- lagN[which(as.logical(unlist(ccf3[i,'sigdt.bird'])>0))]
filtered[[i]]$ccf.bird <- ccf.bird
filtered[[i]]$bird.p <- unlist(ccf3[i,'ccfP.bird'])[which(as.logical(unlist(ccf3[i,'sigdt.bird'])>0))]
}
View(filtered)
View(filtered)
## Bird pop @origin leads bird pop @destination
## with a negative(breeding<->non-breeding grounds)/
## positive(stopover<->stopover) correlation
bird.df <- data.frame()
for (i in 1:length(filtered)){
if(length(filtered[[i]]$ccf.bird)!=0){
for (k in 1:length(filtered[[i]]$ccf.bird)){
df_tmp <- data.frame(birdorder=filtered[[i]]$birdorder,
ori=filtered[[i]]$ori,
dest=filtered[[i]]$dest,
lag=as.numeric(names(filtered[[i]]$ccf.bird)[k]),
corr=filtered[[i]]$ccf.bird[k],
p=filtered[[i]]$bird.p[k])
if(df_tmp$lag<0 | df_tmp$lag==0){
bird.df <- bird.df %>%
rbind(df_tmp)
}
}
}
}
View(bird.df)
## Bird pop @origin leads virus lineage movement from origin to destination
## with a positive/negative correlation
ori.df <- data.frame()
for (i in 1:length(filtered)){
if(length(filtered[[i]]$ccf.ori)!=0){
for (k in 1:length(filtered[[i]]$ccf.ori)){
df_tmp <- data.frame(birdorder=filtered[[i]]$birdorder,
ori=filtered[[i]]$ori,
dest=filtered[[i]]$dest,
lag=as.numeric(names(filtered[[i]]$ccf.ori)[k]),
corr=filtered[[i]]$ccf.ori[k],
p=filtered[[i]]$ori.p[k])
if(df_tmp$lag<0 | df_tmp$lag==0){
ori.df <- ori.df %>%
rbind(df_tmp)
}
}
}
}
## Bird pop @destination lags/leads virus lineage movement from origin to destiniation
## with a positive correlation
dest.df <- data.frame()
for (i in 1:length(filtered)){
if(length(filtered[[i]]$ccf.dest)!=0){
for (k in 1:length(filtered[[i]]$ccf.dest)){
df_tmp <- data.frame(birdorder=filtered[[i]]$birdorder,
ori=filtered[[i]]$ori,
dest=filtered[[i]]$dest,
lag=as.numeric(names(filtered[[i]]$ccf.dest)[k]),
corr=filtered[[i]]$ccf.dest[k],
p=filtered[[i]]$ccf.dest[k])
if(df_tmp$corr>0){
dest.df <- dest.df %>%
rbind(df_tmp)
}
}
}
}
View(dest.df)
View(ori.df)
## Bird pop @origin leads virus lineage movement from origin to destination
## with a positive correlation
ori.df <- data.frame()
for (i in 1:length(filtered)){
if(length(filtered[[i]]$ccf.ori)!=0){
for (k in 1:length(filtered[[i]]$ccf.ori)){
df_tmp <- data.frame(birdorder=filtered[[i]]$birdorder,
ori=filtered[[i]]$ori,
dest=filtered[[i]]$dest,
lag=as.numeric(names(filtered[[i]]$ccf.ori)[k]),
corr=filtered[[i]]$ccf.ori[k],
p=filtered[[i]]$ori.p[k])
if(!df_tmp$lag>0 & df_tmp$corr>0){
ori.df <- ori.df %>%
rbind(df_tmp)
}
}
}
}
## Bird pop @destination lags virus lineage movement from origin to destination
## with a positive correlation
dest.df <- data.frame()
for (i in 1:length(filtered)){
if(length(filtered[[i]]$ccf.dest)!=0){
for (k in 1:length(filtered[[i]]$ccf.dest)){
df_tmp <- data.frame(birdorder=filtered[[i]]$birdorder,
ori=filtered[[i]]$ori,
dest=filtered[[i]]$dest,
lag=as.numeric(names(filtered[[i]]$ccf.dest)[k]),
corr=filtered[[i]]$ccf.dest[k],
p=filtered[[i]]$ccf.dest[k])
if(df_tmp$corr>0){
dest.df <- dest.df %>%
rbind(df_tmp)
}
}
}
}
## Bird pop @destination lags virus lineage movement from origin to destination
## with a positive correlation
dest.df <- data.frame()
for (i in 1:length(filtered)){
if(length(filtered[[i]]$ccf.dest)!=0){
for (k in 1:length(filtered[[i]]$ccf.dest)){
df_tmp <- data.frame(birdorder=filtered[[i]]$birdorder,
ori=filtered[[i]]$ori,
dest=filtered[[i]]$dest,
lag=as.numeric(names(filtered[[i]]$ccf.dest)[k]),
corr=filtered[[i]]$ccf.dest[k],
p=filtered[[i]]$ccf.dest[k])
if(!df_tmp$lag<0 &df_tmp$corr>0){
dest.df <- dest.df %>%
rbind(df_tmp)
}
}
}
}
## Bird Orders that are possible virus spreaders of the routes
spreaders <- inner_join(bird.df,dest.df,by=c("birdorder","ori","dest"))
spreaders <- inner_join(spreaders,ori.df,by=c("birdorder","ori","dest"))
View(spreaders)
spreaders <- spreaders %>%
filter(lag.y<0|lag.y==0|
(lag.y>0 & (abs(lag.y)<abs(lag.x)|abs(lag.y)==abs(lag.x))))
## Bird Orders that are possible virus spreaders of the routes
spreaders <- inner_join(bird.df,dest.df,by=c("birdorder","ori","dest"))
spreaders <- spreaders %>%
filter(lag.y<0|lag.y==0|
(lag.y>0 & (abs(lag.y)<abs(lag.x)|abs(lag.y)==abs(lag.x))))
spreaders <- inner_join(spreaders,ori.df,by=c("birdorder","ori","dest"))
## Bird pop @destination lags virus lineage movement from origin to destination
## with a positive correlation
dest.df <- data.frame()
for (i in 1:length(filtered)){
if(length(filtered[[i]]$ccf.dest)!=0){
for (k in 1:length(filtered[[i]]$ccf.dest)){
df_tmp <- data.frame(birdorder=filtered[[i]]$birdorder,
ori=filtered[[i]]$ori,
dest=filtered[[i]]$dest,
lag=as.numeric(names(filtered[[i]]$ccf.dest)[k]),
corr=filtered[[i]]$ccf.dest[k],
p=filtered[[i]]$dest.p[k])
if(!df_tmp$lag<0 &df_tmp$corr>0){
dest.df <- dest.df %>%
rbind(df_tmp)
}
}
}
}
## Bird Orders that are possible virus spreaders of the routes
spreaders <- inner_join(bird.df,dest.df,by=c("birdorder","ori","dest"))
spreaders <- spreaders %>%
filter(lag.y<0|lag.y==0|
(lag.y>0 & (abs(lag.y)<abs(lag.x)|abs(lag.y)==abs(lag.x))))
spreaders <- inner_join(spreaders,ori.df,by=c("birdorder","ori","dest"))
## Bird Orders that are possible virus spreaders of the routes
spreaders <- inner_join(bird.df,dest.df,by=c("birdorder","ori","dest"))
View(spreaders)
spreaders <- inner_join(spreaders,ori.df,by=c("birdorder","ori","dest"))
0.05/9
0.01/9
spreaders_multiComp <- spreaders %>%
filter(p.x<0.00556 & p.y<0.00556 & p<0.00556)
View(spreaders_multiComp)
View(spreaders_multiComp)
View(spreaders)
View(ori.df)
unique(ori.df)
unique(ori.df[,1:3])
ori.df.multiCom <- ori.df %>%
filter(p<0.05/9)
View(ori.df.multiCom)
dest.df.multiCom <- dest.df %>%
filter(p<0.05/9)
View(dest.df.multiCom)
bird.df.multiCom <- bird.df %>%
filter(p<0.05/9)
View(bird.df.multiCom)
spreaders_multiComp <- inner_join(bird.df.multiCom,dest.df.multiCom,by=c("birdorder","ori","dest"))
View(spreaders_multiComp)
1/12
setwd('/Users/qiqiy/Documents/P2_WAI/manuscript/HPAI_Bird_world/Scripts/Correlation_bird_virus_continuous/code')
mj <- read.csv('../data/virus_od_month_migtimes_bf3.csv')
library(dplyr)
mj_yr <- mj %>%
group_by(od) %>%
summarise(yr_count=sum(counts))
mj <- mj %>%
left_join(mj_yr) %>%
mutate(freq = counts/yr_count)
month_bird_range <- read.table('../data/month_bird_range.txt',
header = TRUE)
library(tidyr)
month_bird_range <- month_bird_range %>%
pivot_longer(cols=c('NS','SN'),names_to = 'direction',values_to = 'bird_range')
mj.color <- mj %>%
left_join(month_bird_range,by=c("month"="Month","direction"="direction"))
library(ggplot2)
ggplot(data=mj.color %>% filter(direction=="NS"),mapping=aes(x=month,y=freq,fill=bird_range))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec"),
labels=c("Jan", "","Mar","","May",
"","Jul","","Sep","","Nov","")) +
facet_wrap(~od) +
scale_fill_manual(values=c('#D99D7A','#EEEA76','#9CBEE2','grey'))+
geom_hline(yintercept=1/16,linetype='dashed',colour='darkred') +
ylab('Frequency') +
labs(fill="Bird range")
ggsave(filename='MarkovJumpMonthDis_NS.png',width=9)
ggplot(data=mj.color %>% filter(direction=="SN"),mapping=aes(x=month,y=freq,fill=bird_range))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec"),
labels=c("Jan", "","Mar","","May",
"","Jul","","Sep","","Nov","")) +
facet_wrap(~od) +
scale_fill_manual(values=c('#D99D7A','#EEEA76','#9CBEE2','grey'))+
geom_hline(yintercept=1/6,linetype='dashed',colour='darkred') +
ylab('Frequency') +
labs(fill="Bird annual cycle")
ggsave(filename='MarkovJumpMonthDis_SN.png',width=9)
ggplot(data=mj.color %>% filter(direction=="NS"),mapping=aes(x=month,y=freq,fill=bird_range))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec"),
labels=c("Jan", "","Mar","","May",
"","Jul","","Sep","","Nov","")) +
facet_wrap(~od) +
scale_fill_manual(values=c('#D99D7A','#EEEA76','#9CBEE2','grey'))+
geom_hline(yintercept=1/6,linetype='dashed',colour='darkred') +
ylab('Frequency') +
labs(fill="Bird range")
ggsave(filename='MarkovJumpMonthDis_NS.png',width=9)
ggplot(data=mj.color %>% filter(direction=="NS"),mapping=aes(x=month,y=freq,fill=bird_range))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec"),
labels=c("Jan", "","Mar","","May",
"","Jul","","Sep","","Nov","")) +
facet_wrap(~od) +
scale_fill_manual(values=c('#D99D7A','#EEEA76','#9CBEE2','grey'))+
geom_hline(yintercept=1/6,linetype='dashed',colour='darkred') +
ylab('Frequency') +
labs(fill="Bird annual cycle")
ggsave(filename='MarkovJumpMonthDis_NS.png',width=9)
ggplot(data=mj.color %>% filter(direction=="NS"),mapping=aes(x=month,y=freq,fill=bird_range))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec"),
labels=c("Jan", "","Mar","","May",
"","Jul","","Sep","","Nov","")) +
facet_wrap(~od) +
scale_fill_manual(values=c('#D99D7A','#EEEA76','#9CBEE2','grey'))+
geom_hline(yintercept=1/6,linetype='dashed',colour='darkred') +
ylab('Frequency') +
labs(fill="Bird annual cycle/nphase")
ggsave(filename='MarkovJumpMonthDis_NS.png',width=9)
ggplot(data=mj.color %>% filter(direction=="SN"),mapping=aes(x=month,y=freq,fill=bird_range))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec"),
labels=c("Jan", "","Mar","","May",
"","Jul","","Sep","","Nov","")) +
facet_wrap(~od) +
scale_fill_manual(values=c('#D99D7A','#EEEA76','#9CBEE2','grey'))+
geom_hline(yintercept=1/6,linetype='dashed',colour='darkred') +
ylab('Frequency') +
labs(fill="Bird annual cycle/nphase")
ggsave(filename='MarkovJumpMonthDis_SN.png',width=9)
ggplot(data=mj.color %>% filter(direction=="SN"),mapping=aes(x=month,y=freq,fill=bird_range))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec"),
labels=c("Jan", "","Mar","","May",
"","Jul","","Sep","","Nov","")) +
facet_wrap(~od) +
scale_fill_manual(values=c('#D99D7A','#EEEA76','#9CBEE2','grey'))+
geom_hline(yintercept=1/6,linetype='dashed',colour='darkred') +
ylab('Frequency') +
labs(fill="Bird annual cycle\nphase")
ggsave(filename='MarkovJumpMonthDis_SN.png',width=9)
ggplot(data=mj.color %>% filter(direction=="NS"),mapping=aes(x=month,y=freq,fill=bird_range))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec"),
labels=c("Jan", "","Mar","","May",
"","Jul","","Sep","","Nov","")) +
facet_wrap(~od) +
scale_fill_manual(values=c('#D99D7A','#EEEA76','#9CBEE2','grey'))+
geom_hline(yintercept=1/6,linetype='dashed',colour='darkred') +
ylab('Frequency') +
labs(fill="Bird annual cycle\nphase")
ggsave(filename='MarkovJumpMonthDis_NS.png',width=9)
spreaders_multiComp <- inner_join(ori.df.multiCom,dest.df.multiCom,by=c("birdorder","ori","dest"))
View(spreaders_multiComp)
spreaders <- inner_join(ori.df,dest.df,by=c("birdorder","ori","dest"))
View(spreaders)
## Bird pop @origin leads virus lineage movement from origin to destination
## with a positive correlation
ori.df <- data.frame()
for (i in 1:length(filtered)){
if(length(filtered[[i]]$ccf.ori)!=0){
for (k in 1:length(filtered[[i]]$ccf.ori)){
df_tmp <- data.frame(birdorder=filtered[[i]]$birdorder,
ori=filtered[[i]]$ori,
dest=filtered[[i]]$dest,
lag=as.numeric(names(filtered[[i]]$ccf.ori)[k]),
corr=filtered[[i]]$ccf.ori[k],
p=filtered[[i]]$ori.p[k])
if(!df_tmp$lag>0){
ori.df <- ori.df %>%
rbind(df_tmp)
}
}
}
}
## Bird Orders that are possible virus spreaders of the routes
spreaders <- inner_join(bird.df,dest.df,by=c("birdorder","ori","dest"))
# spreaders <- spreaders %>%
#   filter(lag.y<0|lag.y==0|
#            (lag.y>0 & (abs(lag.y)<abs(lag.x)|abs(lag.y)==abs(lag.x))))
spreaders <- inner_join(spreaders,ori.df,by=c("birdorder","ori","dest"))
spreaders_multiComp <- spreaders %>%
filter(p.x<0.00556 & p.y<0.00556 & p<0.00556)
View(spreaders_multiComp)
ori.df.multiCom <- ori.df %>%
filter(p<0.00556)
View(ori.df.multiCom)
acfplots.bird <- list()
for (i in 1:nrow(ccf2)){
v_tmp <- ccf2[i,'ccfvalue.bird'][[1]]
names(v_tmp) <- c(-7:7)
df_tmp <- data.frame(lag=names(v_tmp),acf=v_tmp,
birdorder=ccf2[i,'birdorder'][[1]],
ori=ccf2[i,'ori'][[1]],dest=ccf2[i,'dest'][[1]])
acfplots.bird[[i]] <- ggplot(df_tmp,aes(x = lag, y=acf)) +
geom_hline(aes(yintercept = 0)) +
geom_segment(mapping = aes(xend = lag, yend = 0)) +
labs(title=df_tmp[1,'birdorder'],x='Month lag',y='ACF')
}
for(bird in 1:length(birdorders)){
ls_tmp <- acfplots.bird[c((9*bird-8):(9*bird))]
plot_tmp <- gridExtra::arrangeGrob(grobs=ls_tmp,nrow=3,ncol=3)
setwd('../output/ccf_bird_ori_dest/')
ggsave(plot=plot_tmp,
filename=paste0(ls_tmp[[1]]$data$ori[1],"_",
ls_tmp[[1]]$data$dest[1],".png"),
width = 7.5)
dev.off()
}
acfplots.ori <- list()
setwd('/Users/qiqiy/Documents/P2_WAI/2022/code')
for(bird in 1:length(birdorders)){
ls_tmp <- acfplots.bird[c((9*bird-8):(9*bird))]
plot_tmp <- gridExtra::arrangeGrob(grobs=ls_tmp,nrow=3,ncol=3)
setwd('../output/ccf_bird_ori_dest/')
ggsave(plot=plot_tmp,
filename=paste0(ls_tmp[[1]]$data$ori[1],"_",
ls_tmp[[1]]$data$dest[1],".png"),
width = 7.5)
dev.off()
}
for(bird in 1:length(birdorders)){
ls_tmp <- acfplots.bird[c((9*bird-8):(9*bird))]
plot_tmp <- gridExtra::arrangeGrob(grobs=ls_tmp,nrow=3,ncol=3)
# setwd('../output/ccf_bird_ori_dest/')
ggsave(plot=plot_tmp,
filename=paste0(ls_tmp[[1]]$data$ori[1],"_",
ls_tmp[[1]]$data$dest[1],".png"),
width = 7.5)
dev.off()
}
acfplots.ori <- list()
for (i in 1:nrow(ccf2)){
v_tmp <- ccf2[i,'ccfvalue.ori'][[1]]
names(v_tmp) <- c(-7:7)
df_tmp <- data.frame(lag=names(v_tmp),acf=v_tmp,
birdorder=ccf2[i,'birdorder'][[1]],
ori=ccf2[i,'ori'][[1]],dest=ccf2[i,'dest'][[1]])
acfplots.ori[[i]] <- ggplot(df_tmp,aes(x = lag, y=acf)) +
geom_hline(aes(yintercept = 0)) +
geom_segment(mapping = aes(xend = lag, yend = 0)) +
labs(title=df_tmp[1,'birdorder'],x='Month lag',y='ACF')
}
for(bird in 1:length(birdorders)){
ls_tmp <- acfplots.ori[c((9*bird-8):(9*bird))]
plot_tmp <- gridExtra::arrangeGrob(grobs=ls_tmp,nrow=3,ncol=3)
setwd('../ccf_birdori_virusmig/')
ggsave(plot=plot_tmp,
filename=paste0(ls_tmp[[1]]$data$ori[1],"_",
ls_tmp[[1]]$data$dest[1],".png"),
width = 7.5)
dev.off()
}
acfplots.dest <- list()
for (i in 1:nrow(ccf2)){
v_tmp <- ccf2[i,'ccfvalue.dest'][[1]]
names(v_tmp) <- c(-7:7)
df_tmp <- data.frame(lag=names(v_tmp),acf=v_tmp,
birdorder=ccf2[i,'birdorder'][[1]],
ori=ccf2[i,'ori'][[1]],dest=ccf2[i,'dest'][[1]])
acfplots.dest[[i]] <- ggplot(df_tmp,aes(x = lag, y=acf)) +
geom_hline(aes(yintercept = 0)) +
geom_segment(mapping = aes(xend = lag, yend = 0)) +
labs(title=df_tmp[1,'birdorder'],x='Month lag',y='ACF')
}
for(bird in 1:length(birdorders)){
ls_tmp <- acfplots.dest[c((9*bird-8):(9*bird))]
plot_tmp <- gridExtra::arrangeGrob(grobs=ls_tmp,nrow=3,ncol=3)
setwd('../ccf_birddest_virusmig/')
ggsave(plot=plot_tmp,
filename=paste0(ls_tmp[[1]]$data$ori[1],"_",
ls_tmp[[1]]$data$dest[1],".png"),
width = 7.5)
dev.off()
}
setwd('/Users/qiqiy/Documents/P2_WAI/manuscript/HPAI_Bird_world/Scripts/Markov jump')
write.csv(dest.df.multiCom,file='dest.df.multiCom.csv')
write.csv(ori.df.multiCom,file='ori.df.multiCom.csv')
upperCI
lowerCI
0.05/9
upperCI
