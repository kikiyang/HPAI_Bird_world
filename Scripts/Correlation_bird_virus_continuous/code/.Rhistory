dI1 <- parms["beta1"] * y["S1"] * y["I1"] + parms["beta.mix"] * y["S1"] * y["I2"]  -
parms["mu"] * y["I1"] - parms["gamma"] * y["I1"]
# Calculate the change in Recovereds (patch 1)
dR1 <- parms["vacc.rate"] * parms["mu"] * y["S1"] +
parms["gamma"] * y["I1"] - parms["mu"] * y["R1"] - parms["imm.wane"] * y["R1"]
## Patch 2 (Low Trust in Government):
# Calculate the change in Susceptibles (patch 2)
dS2 <- parms["mu"] * (y["S2"] + y["I2"] + y["R2"]) -
parms["beta2"] * y["S2"] * y["I2"] - parms["beta.mix"] * y["S2"] * y["I1"] -
parms["mu"] * y["S2"] + parms["imm.wane"] * y["R2"]
# Calculate the change in Infecteds (patch 2)
dI2 <- parms["beta2"] * y["S2"] * y["I2"] + parms["beta.mix"] * y["S2"] * y["I1"] -
(parms["mu"] + parms["gamma"]) * y["I2"]
# Calculate the change in Recovereds (patch 2)
dR2 <- parms["gamma"] * y["I2"] - parms["mu"] * y["R2"] - parms["imm.wane"] * y["R2"]
# Return a list with the changes in S, I, R (in each patch) at the current time step
return(list(c(dS1, dI1, dR1, dS2, dI2, dR2)))
}
# Sequence of times at which we estimate
# (here, we do daily for 365 days - you can change this value)
times_vector <- seq(from=0, to=365, by=1)
# Run the ODE solver
SIR.output <- ode(y=c(S1=START.S1, I1=START.I1, R1=START.R1, S2=START.S2, I2=START.I2, R2=START.R2),
times=times_vector,
func=dx.dt.SIR_2patch,
parms=parms_vector)
# S, I, R in patch 1
plot(x=SIR.output[,"time"],y=SIR.output[,"S1"], type="l", lwd=2, col="blue",
xlab="Time (days)", ylab="Counts", main="Group 1 - High Trust in Government", ylim=c(0,12000))
lines(x=SIR.output[,"time"],y=SIR.output[,"I1"], lwd=2, col="red")
lines(x=SIR.output[,"time"],y=SIR.output[,"R1"], lwd=2, col="green")
legend("right", c("S1", "I1", "R1"), lwd=2, col=c("blue","red","green","black"), lty=1,bty="n")
# S, I, R in patch 2
plot(x=SIR.output[,"time"],y=SIR.output[,"S2"], type="l", lwd=2, col="turquoise",
xlab="Time (days)", ylab="Counts",main="Group 2 - Low Trust in Government", ylim=c(0,12000))
points(x=SIR.output[,"time"],y=SIR.output[,"I2"], type="l", lwd=2, col="magenta")
points(x=SIR.output[,"time"],y=SIR.output[,"R2"], type="l", lwd=2, col="darkgreen")
legend("right", c("S2", "I2", "R2"), lwd=2, col=c("turquoise","magenta","darkgreen"), lty=1,bty="n")
library(deSolve)
## Mean Life Expectancy - too short? ##
mu <- 1/(60*365)
gamma <- 1/5
R0 <- 3
##
beta1 <- 0.0003
beta2 <- 3 * beta1
beta.mix <-  0.1 * beta1
## should I add immunity wane?
vacc.rate <- 99/100
imm.wane <- 1/365
# Set initial conditions S, I, R ("y") in the two patches: S1, S2, I1, I2, R1, R2
START.S1 <- 10000 - 1
START.S2 <- 10000 - 1
START.I1 <- 1
START.I2 <- 1
START.R1 <- 0
START.R2 <- 0
START.N1 <- START.S1 + START.I1 + START.R1
START.N2 <- START.S2 + START.I2 + START.R2
# Create the parameter vector
parms_vector <- c(mu=mu, beta1=beta1, beta2=beta2, beta.mix=beta.mix,
gamma=gamma, vacc.rate=vacc.rate, imm.wane=imm.wane)
dx.dt.SIR_2patch <- function(t, y, parms) {
## Patch 1 (High Trust In Government):
# Calculate the change in Susceptibles (patch 1)
dS1 <- parms["mu"] * (y["S1"] + y["I1"] + y["R1"])
- parms["vacc.rate"] * y["S1"]-
parms["beta1"] * y["S1"] * y["I1"] - parms["beta.mix"] * y["S1"] * y["I2"] -
parms["mu"] * y["S1"] + parms["imm.wane"] * y["R1"]
# Calculate the change in Infecteds (patch 1)
dI1 <- parms["beta1"] * y["S1"] * y["I1"] + parms["beta.mix"] * y["S1"] * y["I2"]  -
parms["mu"] * y["I1"] - parms["gamma"] * y["I1"]
# Calculate the change in Recovereds (patch 1)
dR1 <- parms["vacc.rate"] * parms["mu"] * y["S1"] +
parms["gamma"] * y["I1"] - parms["mu"] * y["R1"] - parms["imm.wane"] * y["R1"]
## Patch 2 (Low Trust in Government):
# Calculate the change in Susceptibles (patch 2)
dS2 <- parms["mu"] * (y["S2"] + y["I2"] + y["R2"]) -
parms["beta2"] * y["S2"] * y["I2"] - parms["beta.mix"] * y["S2"] * y["I1"] -
parms["mu"] * y["S2"] + parms["imm.wane"] * y["R2"]
# Calculate the change in Infecteds (patch 2)
dI2 <- parms["beta2"] * y["S2"] * y["I2"] + parms["beta.mix"] * y["S2"] * y["I1"] -
(parms["mu"] + parms["gamma"]) * y["I2"]
# Calculate the change in Recovereds (patch 2)
dR2 <- parms["gamma"] * y["I2"] - parms["mu"] * y["R2"] - parms["imm.wane"] * y["R2"]
# Return a list with the changes in S, I, R (in each patch) at the current time step
return(list(c(dS1, dI1, dR1, dS2, dI2, dR2)))
}
# Sequence of times at which we estimate
# (here, we do daily for 365 days - you can change this value)
times_vector <- seq(from=0, to=365, by=1)
# Run the ODE solver
SIR.output <- ode(y=c(S1=START.S1, I1=START.I1, R1=START.R1, S2=START.S2, I2=START.I2, R2=START.R2),
times=times_vector,
func=dx.dt.SIR_2patch,
parms=parms_vector)
# S, I, R in patch 1
plot(x=SIR.output[,"time"],y=SIR.output[,"S1"], type="l", lwd=2, col="blue",
xlab="Time (days)", ylab="Counts", main="Group 1 - High Trust in Government", ylim=c(0,12000))
lines(x=SIR.output[,"time"],y=SIR.output[,"I1"], lwd=2, col="red")
lines(x=SIR.output[,"time"],y=SIR.output[,"R1"], lwd=2, col="green")
legend("right", c("S1", "I1", "R1"), lwd=2, col=c("blue","red","green","black"), lty=1,bty="n")
# S, I, R in patch 2
plot(x=SIR.output[,"time"],y=SIR.output[,"S2"], type="l", lwd=2, col="turquoise",
xlab="Time (days)", ylab="Counts",main="Group 2 - Low Trust in Government", ylim=c(0,12000))
points(x=SIR.output[,"time"],y=SIR.output[,"I2"], type="l", lwd=2, col="magenta")
points(x=SIR.output[,"time"],y=SIR.output[,"R2"], type="l", lwd=2, col="darkgreen")
legend("right", c("S2", "I2", "R2"), lwd=2, col=c("turquoise","magenta","darkgreen"), lty=1,bty="n")
library(deSolve)
## Mean Life Expectancy - too short? ##
mu <- 1/(60*365)
gamma <- 1/5
R0 <- 3
##
beta1 <- 0.0003
beta2 <- 3 * beta1
beta.mix <-  0.1 * beta1
## should I add immunity wane?
vacc.rate <- 1/365
imm.wane <- 1/365
# Set initial conditions S, I, R ("y") in the two patches: S1, S2, I1, I2, R1, R2
START.S1 <- 10000 - 1
START.S2 <- 10000 - 1
START.I1 <- 1
START.I2 <- 1
START.R1 <- 0
START.R2 <- 0
START.N1 <- START.S1 + START.I1 + START.R1
START.N2 <- START.S2 + START.I2 + START.R2
# Create the parameter vector
parms_vector <- c(mu=mu, beta1=beta1, beta2=beta2, beta.mix=beta.mix,
gamma=gamma, vacc.rate=vacc.rate, imm.wane=imm.wane)
dx.dt.SIR_2patch <- function(t, y, parms) {
## Patch 1 (High Trust In Government):
# Calculate the change in Susceptibles (patch 1)
dS1 <- parms["mu"] * (y["S1"] + y["I1"] + y["R1"])
- parms["vacc.rate"] * y["S1"]-
parms["beta1"] * y["S1"] * y["I1"] - parms["beta.mix"] * y["S1"] * y["I2"] -
parms["mu"] * y["S1"] + parms["imm.wane"] * y["R1"]
# Calculate the change in Infecteds (patch 1)
dI1 <- parms["beta1"] * y["S1"] * y["I1"] + parms["beta.mix"] * y["S1"] * y["I2"]  -
parms["mu"] * y["I1"] - parms["gamma"] * y["I1"]
# Calculate the change in Recovereds (patch 1)
dR1 <- parms["vacc.rate"] * parms["mu"] * y["S1"] +
parms["gamma"] * y["I1"] - parms["mu"] * y["R1"] - parms["imm.wane"] * y["R1"]
## Patch 2 (Low Trust in Government):
# Calculate the change in Susceptibles (patch 2)
dS2 <- parms["mu"] * (y["S2"] + y["I2"] + y["R2"]) -
parms["beta2"] * y["S2"] * y["I2"] - parms["beta.mix"] * y["S2"] * y["I1"] -
parms["mu"] * y["S2"] + parms["imm.wane"] * y["R2"]
# Calculate the change in Infecteds (patch 2)
dI2 <- parms["beta2"] * y["S2"] * y["I2"] + parms["beta.mix"] * y["S2"] * y["I1"] -
(parms["mu"] + parms["gamma"]) * y["I2"]
# Calculate the change in Recovereds (patch 2)
dR2 <- parms["gamma"] * y["I2"] - parms["mu"] * y["R2"] - parms["imm.wane"] * y["R2"]
# Return a list with the changes in S, I, R (in each patch) at the current time step
return(list(c(dS1, dI1, dR1, dS2, dI2, dR2)))
}
# Sequence of times at which we estimate
# (here, we do daily for 365 days - you can change this value)
times_vector <- seq(from=0, to=365, by=1)
# Run the ODE solver
SIR.output <- ode(y=c(S1=START.S1, I1=START.I1, R1=START.R1, S2=START.S2, I2=START.I2, R2=START.R2),
times=times_vector,
func=dx.dt.SIR_2patch,
parms=parms_vector)
# S, I, R in patch 1
plot(x=SIR.output[,"time"],y=SIR.output[,"S1"], type="l", lwd=2, col="blue",
xlab="Time (days)", ylab="Counts", main="Group 1 - High Trust in Government", ylim=c(0,12000))
lines(x=SIR.output[,"time"],y=SIR.output[,"I1"], lwd=2, col="red")
lines(x=SIR.output[,"time"],y=SIR.output[,"R1"], lwd=2, col="green")
legend("right", c("S1", "I1", "R1"), lwd=2, col=c("blue","red","green","black"), lty=1,bty="n")
# S, I, R in patch 2
plot(x=SIR.output[,"time"],y=SIR.output[,"S2"], type="l", lwd=2, col="turquoise",
xlab="Time (days)", ylab="Counts",main="Group 2 - Low Trust in Government", ylim=c(0,12000))
points(x=SIR.output[,"time"],y=SIR.output[,"I2"], type="l", lwd=2, col="magenta")
points(x=SIR.output[,"time"],y=SIR.output[,"R2"], type="l", lwd=2, col="darkgreen")
legend("right", c("S2", "I2", "R2"), lwd=2, col=c("turquoise","magenta","darkgreen"), lty=1,bty="n")
library(deSolve)
## Mean Life Expectancy - too short? ##
mu <- 1/(50*365)
gamma <- 1/7
R0 <- 3
##
beta1 <- 0.0003
beta2 <- 3 * beta1
beta.mix <-  0.1 * beta1
## should I add immunity wane?
vacc.rate <- 99/100
imm.wane <- 1/365
# Set initial conditions S, I, R ("y") in the two patches: S1, S2, I1, I2, R1, R2
START.S1 <- 10000 - 1
START.S2 <- 10000 - 1
START.I1 <- 1
START.I2 <- 1
START.R1 <- 0
START.R2 <- 0
START.N1 <- START.S1 + START.I1 + START.R1
START.N2 <- START.S2 + START.I2 + START.R2
# Create the parameter vector
parms_vector <- c(mu=mu, beta1=beta1, beta2=beta2, beta.mix=beta.mix,
gamma=gamma, vacc.rate=vacc.rate, imm.wane=imm.wane)
dx.dt.SIR_2patch <- function(t, y, parms) {
## Patch 1 (High Trust In Government):
# Calculate the change in Susceptibles (patch 1)
dS1 <- parms["mu"] * (y["S1"] + y["I1"] + y["R1"])
- parms["vacc.rate"] * y["S1"]-
parms["beta1"] * y["S1"] * y["I1"] - parms["beta.mix"] * y["S1"] * y["I2"] -
parms["mu"] * y["S1"] + parms["imm.wane"] * y["R1"]
# Calculate the change in Infecteds (patch 1)
dI1 <- parms["beta1"] * y["S1"] * y["I1"] + parms["beta.mix"] * y["S1"] * y["I2"]  -
parms["mu"] * y["I1"] - parms["gamma"] * y["I1"]
# Calculate the change in Recovereds (patch 1)
dR1 <- parms["vacc.rate"] * parms["mu"] * y["S1"] +
parms["gamma"] * y["I1"] - parms["mu"] * y["R1"] - parms["imm.wane"] * y["R1"]
## Patch 2 (Low Trust in Government):
# Calculate the change in Susceptibles (patch 2)
dS2 <- parms["mu"] * (y["S2"] + y["I2"] + y["R2"]) -
parms["beta2"] * y["S2"] * y["I2"] - parms["beta.mix"] * y["S2"] * y["I1"] -
parms["mu"] * y["S2"] + parms["imm.wane"] * y["R2"]
# Calculate the change in Infecteds (patch 2)
dI2 <- parms["beta2"] * y["S2"] * y["I2"] + parms["beta.mix"] * y["S2"] * y["I1"] -
(parms["mu"] + parms["gamma"]) * y["I2"]
# Calculate the change in Recovereds (patch 2)
dR2 <- parms["gamma"] * y["I2"] - parms["mu"] * y["R2"] - parms["imm.wane"] * y["R2"]
# Return a list with the changes in S, I, R (in each patch) at the current time step
return(list(c(dS1, dI1, dR1, dS2, dI2, dR2)))
}
# Sequence of times at which we estimate
# (here, we do daily for 365 days - you can change this value)
times_vector <- seq(from=0, to=365, by=1)
# Run the ODE solver
SIR.output <- ode(y=c(S1=START.S1, I1=START.I1, R1=START.R1, S2=START.S2, I2=START.I2, R2=START.R2),
times=times_vector,
func=dx.dt.SIR_2patch,
parms=parms_vector)
# S, I, R in patch 1
plot(x=SIR.output[,"time"],y=SIR.output[,"S1"], type="l", lwd=2, col="blue",
xlab="Time (days)", ylab="Counts", main="Group 1 - High Trust in Government", ylim=c(0,12000))
lines(x=SIR.output[,"time"],y=SIR.output[,"I1"], lwd=2, col="red")
lines(x=SIR.output[,"time"],y=SIR.output[,"R1"], lwd=2, col="green")
legend("right", c("S1", "I1", "R1"), lwd=2, col=c("blue","red","green","black"), lty=1,bty="n")
# S, I, R in patch 2
plot(x=SIR.output[,"time"],y=SIR.output[,"S2"], type="l", lwd=2, col="turquoise",
xlab="Time (days)", ylab="Counts",main="Group 2 - Low Trust in Government", ylim=c(0,12000))
points(x=SIR.output[,"time"],y=SIR.output[,"I2"], type="l", lwd=2, col="magenta")
points(x=SIR.output[,"time"],y=SIR.output[,"R2"], type="l", lwd=2, col="darkgreen")
legend("right", c("S2", "I2", "R2"), lwd=2, col=c("turquoise","magenta","darkgreen"), lty=1,bty="n")
1+4+25+9+2.5^2+25
1+4+25+9+2.5^2+25 + 5.5^2 + 49 + 0.25 + 1.5^2
sqrt(152)
sqrt(152/10)
200/3 * log(2)
?log
sqrt(200/3 * log(2))
THETA1.SET <- seq(0.1,0.7,by=0.1)
THETA2.SET <- seq(0.1,0.7,by=0.1)
SCALING <- c(0.001,0.01,0.1,0.5,1,2,10)
PARMS2FIT.SET <- data.frame('theta1','theta2','scaling')
View(PARMS2FIT.SET)
PARMS2FIT.SET <- data.frame(theta1=THETA1.SET,theta2=THETA2.SET,scaling=SCALING)
View(PARMS2FIT.SET)
THETA1.SET * THETA2.SET * SCALING
load("~/Documents/P3_UIV/BroadFluVacModel/calibration/USA.exPand.parms0.RData")
View(sim.results)
rm(list=ls())
library(deSolve)
load('H3Vac.invad.RData')
date(0.112328767123288)
library(lubridate)
date(0.112328767123288)
?lubridate
parse_date_time(0.112328767123288)
month(0.112328767123288)
parse_date_time(2000.112328767123288)
ymd(2000.112328767123288)
date(2000.112328767123288)
month(2000.112328767123288)
date_decimal(0.112328767123288)
date_decimal(1990.112328767123288)
date_decimal(0.361643835616438)
date_decimal(0.698630136986301)
date_decimal(0.865753424657534)
library(sf)
library(ggplot2)
library(raster)
require(maptools)
require(sp)
setwd('/Users/qiqiy/Documents/P2_WAI/manuscript/HPAI_Bird_world/Scripts/Correlation_bird_virus_continuous/code')
mj <- read.csv('../data/virus_od_month_migtimes_bf3.csv')
View(mj)
library(dplyr)
mj <- mj %>%
group_by(od) %>%
summarise(yr_count=sum(counts))
mj <- read.csv('../data/virus_od_month_migtimes_bf3.csv')
mj_yr <- mj %>%
group_by(od) %>%
summarise(yr_count=sum(counts))
View(mj_yr)
mj %>%
left_join(mj_yr)
mj <- mj %>%
left_join(mj_yr)
mj <- mj %>%
mutate(freq = counts/yr_count)
library(ggplot2)
ggplot(data=mj,mapping=aes(x=month,y=freq),group_by=od)
ggplot(data=mj,mapping=aes(x=month,y=freq,group=od))+
geom_bar()
ggplot(data=mj,mapping=aes(x=month,y=freq))+
geom_bar()
ggplot(data=mj,mapping=aes(x=month,y=freq))+
geom_bar()+
facet_grid(od)
ggplot(data=mj,mapping=aes(x=month,y=freq))+
geom_bar()+
facet_grid(~od)
ggplot(data=mj,mapping=aes(x=month,y=freq))+
geom_bar()+
facet_grid(.~od)
ggplot(data=mj,mapping=aes(x=month,y=freq))+
geom_col()+
facet_grid(.~od)
ggplot(data=mj,mapping=aes(x=month,y=freq))+
geom_col()+
facet_grid(.~od)
ggplot(data=mj,mapping=aes(x=month,y=freq))+
geom_col()+
facet_wrap(~od)
ggplot(data=mj,mapping=aes(x=month,y=freq))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec")) +
facet_wrap(~od)
ggplot(data=mj,mapping=aes(x=month,y=freq))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec")) +
facet_wrap(~od) +
geom_hline(y=0.2)
ggplot(data=mj,mapping=aes(x=month,y=freq))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec")) +
facet_wrap(~od) +
geom_hline(yintercept=0.2)
ggplot(data=mj,mapping=aes(x=month,y=freq))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec")) +
facet_wrap(~od) +
geom_hline(yintercept=0.2,linetype='dashed',colour='darkred')
ggplot(data=mj,mapping=aes(x=month,y=freq))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec")) +
facet_wrap(~od) +
geom_hline(yintercept=0.2,linetype='dashed',colour='darkred') +
ylab('frequency')
ggplot(data=mj,mapping=aes(x=month,y=freq))+
geom_col()+
scale_x_discrete(limits = c("Jan", "","Mar","","May","","Jul",
"","Sep","","Nov","Dec")) +
facet_wrap(~od) +
geom_hline(yintercept=0.2,linetype='dashed',colour='darkred') +
ylab('frequency')
ggplot(data=mj,mapping=aes(x=month,y=freq))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec"),
labels=c("Jan", "","Mar","","May",
"","Jul","","Sep","","Nov","Dec")) +
facet_wrap(~od) +
geom_hline(yintercept=0.2,linetype='dashed',colour='darkred') +
ylab('Frequency')
ggplot(data=mj,mapping=aes(x=month,y=freq))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec"),
labels=c("Jan", "","Mar","","May",
"","Jul","","Sep","","Nov","")) +
facet_wrap(~od) +
geom_hline(yintercept=0.2,linetype='dashed',colour='darkred') +
ylab('Frequency')
mj <- read.csv('../data/virus_od_month_migtimes_bf3.csv')
mj_yr <- mj %>%
group_by(od) %>%
summarise(yr_count=sum(counts))
mj <- mj %>%
left_join(mj_yr) %>%
mutate(freq = counts/yr_count)
View(mj)
ggplot(data=mj %>% filter(direction='NS'),mapping=aes(x=month,y=freq))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec"),
labels=c("Jan", "","Mar","","May",
"","Jul","","Sep","","Nov","")) +
facet_wrap(~od) +
geom_hline(yintercept=0.2,linetype='dashed',colour='darkred') +
ylab('Frequency')
ggplot(data=mj %>% filter(direction=='NS'),mapping=aes(x=month,y=freq))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec"),
labels=c("Jan", "","Mar","","May",
"","Jul","","Sep","","Nov","")) +
facet_wrap(~od) +
geom_hline(yintercept=0.2,linetype='dashed',colour='darkred') +
ylab('Frequency')
month_bird_range <- read.csv('../data/month_bird_range.txt')
View(month_bird_range)
month_bird_range <- read.txt('../data/month_bird_range.txt')
month_bird_range <- read.table('../data/month_bird_range.txt')
View(month_bird_range)
month_bird_range <- read.table('../data/month_bird_range.txt',
header = TRUE)
View(month_bird_range)
library(tidyr)
month_bird_range %>%
pivot_longer(cols=c('NS','SN'),names_to = 'direction')
month_bird_range <- month_bird_range %>%
pivot_longer(cols=c('NS','SN'),names_to = 'direction')
View(month_bird_range)
month_bird_range <- read.table('../data/month_bird_range.txt',
header = TRUE)
g
month_bird_range <- month_bird_range %>%
pivot_longer(cols=c('NS','SN'),names_to = 'direction',values_to = 'bird_range')
View(month_bird_range)
mj %>%
left_join(month_bird_range,by=c("month"="Month","direction"="direction"))
mj.color <- mj %>%
left_join(month_bird_range,by=c("month"="Month","direction"="direction"))
View(mj.color)
ggplot(data=mj.color,mapping=aes(x=month,y=freq,fill=bird_range))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec"),
labels=c("Jan", "","Mar","","May",
"","Jul","","Sep","","Nov","")) +
facet_wrap(~od) +
geom_hline(yintercept=0.2,linetype='dashed',colour='darkred') +
ylab('Frequency')
ggplot(data=mj.color,mapping=aes(x=month,y=freq,fill=bird_range))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec"),
labels=c("Jan", "","Mar","","May",
"","Jul","","Sep","","Nov","")) +
facet_wrap(~od) +
scale_color_manual(values=c('#D99D7A','#EEEA76','#9CBEE2','grey'))+
geom_hline(yintercept=0.2,linetype='dashed',colour='darkred') +
ylab('Frequency')
ggplot(data=mj.color,mapping=aes(x=month,y=freq,fill=bird_range))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec"),
labels=c("Jan", "","Mar","","May",
"","Jul","","Sep","","Nov","")) +
facet_wrap(~od) +
scale_color_manual(values=c('#D99D7A','#EEEA76','#9CBEE2','grey'))+
geom_hline(yintercept=0.2,linetype='dashed',colour='darkred') +
ylab('Frequency')
ggplot(data=mj.color,mapping=aes(x=month,y=freq,fill=bird_range))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec"),
labels=c("Jan", "","Mar","","May",
"","Jul","","Sep","","Nov","")) +
facet_wrap(~od) +
scale_fill_manual(values=c('#D99D7A','#EEEA76','#9CBEE2','grey'))+
geom_hline(yintercept=0.2,linetype='dashed',colour='darkred') +
ylab('Frequency')
ggplot(data=mj.color,mapping=aes(x=month,y=freq,fill=bird_range))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec"),
labels=c("Jan", "","Mar","","May",
"","Jul","","Sep","","Nov","")) +
facet_wrap(~od) +
scale_fill_manual(values=c('#D99D7A','#EEEA76','#9CBEE2','grey'))+
geom_hline(yintercept=0.2,linetype='dashed',colour='darkred') +
ylab('Frequency') +
labs(fill="Bird range")
ggsave(filename='MarkovJumpMonthDis.png',width=10)
ggplot(data=mj.color %>% filter(direction=="NS"),mapping=aes(x=month,y=freq,fill=bird_range))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec"),
labels=c("Jan", "","Mar","","May",
"","Jul","","Sep","","Nov","")) +
facet_wrap(~od) +
scale_fill_manual(values=c('#D99D7A','#EEEA76','#9CBEE2','grey'))+
geom_hline(yintercept=0.2,linetype='dashed',colour='darkred') +
ylab('Frequency') +
labs(fill="Bird range")
ggsave(filename='MarkovJumpMonthDis_NS.png',width=8)
ggsave(filename='MarkovJumpMonthDis_NS.png',width=9)
ggplot(data=mj.color %>% filter(direction=="SN"),mapping=aes(x=month,y=freq,fill=bird_range))+
geom_col()+
scale_x_discrete(limits = c("Jan", "Feb","Mar","Apr","May","Jun","Jul",
"Aug","Sep","Oct","Nov","Dec"),
labels=c("Jan", "","Mar","","May",
"","Jul","","Sep","","Nov","")) +
facet_wrap(~od) +
scale_fill_manual(values=c('#D99D7A','#EEEA76','#9CBEE2','grey'))+
geom_hline(yintercept=0.2,linetype='dashed',colour='darkred') +
ylab('Frequency') +
labs(fill="Bird range")
ggsave(filename='MarkovJumpMonthDis_SN.png',width=9)
